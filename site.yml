---
- name: Setup scenarioo server for Demos and Ci?
  hosts: mainserver
  become: True        # We need root rights to install stuff

  #
  # CONFIG & VARIABLES
  #
  pre_tasks:
      - name: Load config.json
        include_vars:
          file: config.json
          name: config

      - name: Get active branches             # Active branche = branch with a config file under ./demos/
        set_fact: active_branches="{{lookup('fileglob', './demos/*.json').split(',') | map('basename') | map('regex_replace', '(.*).json', '\\1') | list}}"

      - name: Get currently deployed branches # Currently deployed = branch with scenarioo-<branch>.war in webapps
        shell: ls -1  {{ config.tomcatFolder }}/webapps | grep '.war' | sed -e 's/^scenarioo-\(.*\).war/\1/'
        register: deployed_branches_cmd
      - set_fact: deployed_branches="{{ deployed_branches_cmd.stdout_lines }}"

  # See roles/ folder
  roles:
    - tomcat
    - docker
    - nginx

  tasks:
    - name: Install unzip (needed to extract artifact docu)
      package:
        name: unzip
        state: present

    #
    # CLEANUP OLD BRANCHES
    #
    - name: Cleanup inactive branches
      include_role:
        name: cleanupBranch               # Checkout roles/cleanupBranch/tasks/main.yml
      when: branch not in active_branches
      with_items: "{{ deployed_branches }}"
      loop_control:
          loop_var: branch

    #
    # ENSURE ACTIVE BRANCHES ARE DEPLOYED
    #
    - name: Deploy active branches
      include_role:
        name: deployBranch                # Checkout roles/deployBranch/tasks/main.yml
      with_items: "{{ active_branches }}"
      loop_control:
          loop_var: branch

    #
    # UPDATE OVERVIEW PAGE
    #
    - name: Update overview page
      copy:
        src: overviewpage
        dest: /scenarioo
        owner: www-data
        group: www-data







